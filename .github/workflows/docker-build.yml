name: Docker build

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
  workflow_run:
    workflows: ["ci"]
    types: [completed]

jobs:
  check-pr-status:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      should-build: ${{ steps.check.outputs.should-build }}
    steps:
      - name: Check if PR is draft
        id: check
        run: |
          if [[ "${{ github.event.workflow_run.event }}" != "pull_request" ]]; then
            echo "should-build=true" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.workflow_run.pull_requests }}" == "null" ]] || [[ "${{ github.event.workflow_run.pull_requests }}" == "" ]]; then
            echo "should-build=true" >> $GITHUB_OUTPUT
          else
            # Check if any PR is not a draft
            draft_status=$(echo '${{ toJson(github.event.workflow_run.pull_requests) }}' | jq -r '.[0].draft // false')
            if [[ "$draft_status" == "false" ]]; then
              echo "should-build=true" >> $GITHUB_OUTPUT
            else
              echo "should-build=false" >> $GITHUB_OUTPUT
            fi
          fi

  docker-build:
    name: Docker Build
    needs: check-pr-status
    if: ${{ needs.check-pr-status.outputs.should-build == 'true' }}
    uses: dockersamples/.github/.github/workflows/reusable-docker-build.yaml@main

    permissions:
      contents: read
      packages: write # needed to push docker image to ghcr.io
      pull-requests: write # needed to create and update comments in PRs

    secrets:
      # Only needed if with:dockerhub-enable is true below
      # https://hub.docker.com/settings/security
      dockerhub-username: ${{ secrets.DOCKERHUB_USERNAME }}
      dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}
    with:
      ghcr-enable: true

      ### A list of the account/repo names for docker build. List should match what's enabled above
      ### defaults to:
      image-names: |
         ghcr.io/${{ github.repository }}

      ### set rules for tagging images, based on special action syntax:
      ### https://github.com/docker/metadata-action#tags-input
      ### defaults to:
      tag-rules: |
        type=raw,value=latest,enable={{is_default_branch}}
        type=schedule
        type=ref,event=branch
        type=ref,event=pr
        type=semver,pattern={{version}}
        type=semver,pattern={{major}}.{{minor}}
        type=semver,pattern={{major}}
        type=sha

      ### path to where docker should copy files into image
      ### defaults to root of repository (.)
      context: .

      ### platforms to build for
      ### defaults to linux/amd64
      ### other options: linux/amd64,linux/arm64,linux/arm/v7
      platforms: linux/amd64,linux/arm64

      ### Create a PR comment with image tags and labels
      ### defaults to true
      # comment-enable: false

# Example release pipeline trigger:
#
# TAG="v0.0.1"
# git tag "$TAG" -m "Release version: $TAG"
# git push origin --tags
